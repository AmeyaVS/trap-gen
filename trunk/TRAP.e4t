<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Tasks SYSTEM "Tasks-4.1.dtd">
<!-- eric4 tasks file for project TRAP -->
<!-- Saved: 2008-07-29, 03:44:07 -->
<Tasks version="4.1">
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: add the possibility of defining templated methods as done for</Summary>
    <Description></Description>
    <Created>2008-07-22, 04:15:01</Created>
    <Resource>
      <Filename>
        <Dir>cxx_writer</Dir>
        <Dir>writer_code</Dir>
        <Name>ClassDecls.py</Name>
      </Filename>
      <Linenumber>49</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: The current version of the decoder does not take into account splitting</Summary>
    <Description></Description>
    <Created>2008-07-26, 03:39:11</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>decoder.py</Name>
      </Filename>
      <Linenumber>37</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: I do not like it too much ... any better ideas?; is there</Summary>
    <Description></Description>
    <Created>2008-07-26, 03:41:49</Created>
    <Resource>
      <Filename>
        <Dir>processors</Dir>
        <Dir>ARM7TDMI</Dir>
        <Name>ARMArch.py</Name>
      </Filename>
      <Linenumber>141</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: see this category, maybe we can express it in a more general way</Summary>
    <Description></Description>
    <Created>2008-07-28, 15:04:58</Created>
    <Resource>
      <Filename>
        <Dir>processors</Dir>
        <Dir>ARM7TDMI</Dir>
        <Name>ARMCoding.py</Name>
      </Filename>
      <Linenumber>62</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: complete this part</Summary>
    <Description></Description>
    <Created>2008-07-28, 15:04:58</Created>
    <Resource>
      <Filename>
        <Dir>processors</Dir>
        <Dir>ARM7TDMI</Dir>
        <Name>ARMCoding.py</Name>
      </Filename>
      <Linenumber>82</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: think about the clocked registers</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:27:22</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>procWriter.py</Name>
      </Filename>
      <Linenumber>61</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: create using all the newest TLM 2.0 the TLM ports; remember also</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:27:22</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>procWriter.py</Name>
      </Filename>
      <Linenumber>581</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: now I have to check for loops, if there are then the alias assignment is not valid</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:27:22</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>procWriter.py</Name>
      </Filename>
      <Linenumber>711</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: I do a topological sort and take the elements in this ordes and I add them to the initialization;</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:27:22</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>procWriter.py</Name>
      </Filename>
      <Linenumber>712</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: now I have to complete initializing the alias graph, print the remaining</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:27:22</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>procWriter.py</Name>
      </Filename>
      <Linenumber>755</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: We also need to initialize the quantuum keeper etc</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:27:22</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>procWriter.py</Name>
      </Filename>
      <Linenumber>758</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: an accurate interface is also needed. This means that</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:27:22</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>processor.py</Name>
      </Filename>
      <Linenumber>716</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: do we need to access the fields of the instructions? if so</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:27:22</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>isa.py</Name>
      </Filename>
      <Linenumber>114</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: as for the begin op, do we need to access any</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:27:22</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>isa.py</Name>
      </Filename>
      <Linenumber>124</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: think about how to do the mnemonic</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:27:22</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>isa.py</Name>
      </Filename>
      <Linenumber>290</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: I do not like this way: I would like to make it more automatic</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:42:06</Created>
    <Resource>
      <Filename>
        <Dir>processors</Dir>
        <Dir>ARM7TDMI</Dir>
        <Name>ARMMethods.py</Name>
      </Filename>
      <Linenumber>46</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: check carry and overflow operations; in particular, are they valid for</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:42:06</Created>
    <Resource>
      <Filename>
        <Dir>processors</Dir>
        <Dir>ARM7TDMI</Dir>
        <Name>ARMMethods.py</Name>
      </Filename>
      <Linenumber>533</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: first of all I create the instance of the instruction and of all the</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:43:06</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>isaWriter.py</Name>
      </Filename>
      <Linenumber>179</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: I perform the operation</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:43:06</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>isaWriter.py</Name>
      </Filename>
      <Linenumber>187</Linenumber>
    </Resource>
  </Task>
  <Task priority="1" completed="False" bugfix="False">
    <Summary>TODO: create the methods (stall, flush, etc.) use to controll the instruction flow.</Summary>
    <Description></Description>
    <Created>2008-07-29, 03:43:06</Created>
    <Resource>
      <Filename>
        <Dir>trap</Dir>
        <Name>isaWriter.py</Name>
      </Filename>
      <Linenumber>259</Linenumber>
    </Resource>
  </Task>
</Tasks>